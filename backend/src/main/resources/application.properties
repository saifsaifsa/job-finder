spring.datasource.url=jdbc:mysql://localhost:3306/jobfinderdb?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=

### JPA / HIBERNATE ###
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# metrics
management.metrics.export.prometheus.enabled=true
management.endpoints.web.exposure.include=*

# App Properties
jobfinder.app.jwtSecret= SJJK8976SCSJOOI780CXSJ7S7865SCs
jobfinder.app.jwtExpirationMs=86400000


openai.api.key= sk-3fH
openai.api.url= https://api.openai.com/v1/chat/completions

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=mohamedsr09@gmail.com
spring.mail.password=jmdb wygr heeh qcxs
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

jwt.expiration=86400000
jwt.secret=9a4f2c8d3b7a1e6f45c8a0b3f267d8b1d4e6f3c8a9d2b5f8e3a9c8b5f6v8a3d9

spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.linkedin.client-id=YOUR_LINKEDIN_CLIENT_ID
spring.security.oauth2.client.registration.linkedin.client-secret=YOUR_LINKEDIN_CLIENT_SECRET
spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile, r_emailaddress
spring.security.oauth2.client.registration.linkedin.redirect-uri=http://localhost:8080/login/oauth2/code/linkedin
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.user-name-attribute=id

spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB
file.upload-dir=upload

